name: ci-linux

on:
  push:
    paths:
      - '**'
      - '!*.bat'
      - '!*.cmd'
      - '!*.sh'
      - '!doc_COM/*'
      - '!doc_DE/*'
      - '!doc_EN/*'
      - '!include/**'
      - '!man/*'
      - '!COPYING'
      - '!INSTALL'
      - '!README*'
      - '!.clang*'
      - '!.gitignore'
      - '!.gitattributes'
      - '!.github/workflows/*'
      - '.github/workflows/ci-linux.yml'
  pull_request:
    paths:
      - '**'
      - '!*.bat'
      - '!*.cmd'
      - '!*.sh'
      - '!doc_COM/*'
      - '!doc_DE/*'
      - '!doc_EN/*'
      - '!include/**'
      - '!man/*'
      - '!COPYING'
      - '!INSTALL'
      - '!README*'
      - '!.clang*'
      - '!.gitignore'
      - '!.gitattributes'
      - '!.github/workflows/*'
      - '.github/workflows/ci-linux.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  ci-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          if ! apt-fast -- help &> /dev/null; then
            sudo add-apt-repository -u -y ppa:apt-fast/stable
            sudo apt-get update
            echo debconf apt-fast/maxdownloads string 16 | sudo debconf-set-selections
            echo debconf apt-fast/dlflag boolean true | sudo debconf-set-selections
            echo debconf apt-fast/aptmanager string apt-get | sudo debconf-set-selections
            DEBIAN_FRONTEND=noninteractive sudo apt install -y apt-fast
          else
            sudo apt-fast update
          fi
          sudo apt-fast install -y cmake ninja-build
      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '3.1.11'
      - name: Checkout code
        uses: actions/checkout@master
      - name: Configure
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=DEBUG
      - name: Build
        run: |
          cmake --build build -j
      - name: Test
        env:
          VERBOSE: 1
        run: |
          ctest --build-run-dir build --test-dir build -j --rerun-failed --output-on-failure
